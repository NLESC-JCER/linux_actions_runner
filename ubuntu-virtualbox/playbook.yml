---
- hosts: all
  vars:
    RUNNER_VERSION: 2.169.1
  vars_files:
    - secret.yml
  vars_prompt:
    - name: ORG
      prompt: What is the GitHub organization associated with this self-hosted runner?
      private: no
    - name: REPO
      prompt: What is the GitHub repository associated with this self-hosted runner?
      private: no
    - name: RUNNER_NAME
      prompt: What is the runner's name on GitHub?
      private: no
      default: github-action-runner

  tasks:
    - name: Verify that user exists on the server
      become: yes
      user:
        name: "{{ ansible_user }}"
        groups: sudo,adm
        state: present

    - name: Showing the input variables
      debug:
        msg: "Setting up a GitHub runner {{ RUNNER_NAME }} for repository: https://github.com/{{ ORG }}/{{ REPO }}"

    - name: Only run "apt update-cache" if the last one is more than 3600 seconds old
      become: yes
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install jq
      become: yes
      apt:
        name:
          - jq
          - curl
        state: present

    - name: Requesting registration
      shell:
        cmd: "curl -sX POST -H \"Authorization: token {{ PERSONAL_ACCESS_TOKEN }}\" \"https://api.github.com/repos/{{ ORG }}/{{ REPO }}/actions/runners/registration-token\" | jq .token --raw-output"
      register: CURL_OUTPUT
      tags:
        - uninstall
      args:
        warn: false

    - name: Creating a directory for the runner
      file:
        path: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}
        state: directory

    - name: Downloading and extracting the runner
      unarchive:
        src: https://github.com/actions/runner/releases/download/v{{ RUNNER_VERSION }}/actions-runner-linux-x64-{{ RUNNER_VERSION }}.tar.gz
        dest: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}
        creates: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}/config.sh
        remote_src: yes

    - name: Configuring the GitHub Action runner
      args:
        chdir: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}
      command: ./config.sh --url https://github.com/{{ ORG }}/{{ REPO }} --name {{ RUNNER_NAME }} --token {{ CURL_OUTPUT.stdout }} --unattended --replace

    - name: Install the GitHub Action runner as a service
      args:
        chdir: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}
        creates: /etc/systemd/system/actions.runner.{{ ORG }}-{{ REPO }}.{{ RUNNER_NAME }}.service
      become: yes
      command: ./svc.sh install

    - name: Enable starting the runner service when the machine starts
      become: yes
      systemd:
        name: actions.runner.{{ ORG }}-{{ REPO }}.{{ RUNNER_NAME }}.service
        enabled: yes
      tags:
        - enable

    - name: Starting the runner service
      become: yes
      systemd:
        name: actions.runner.{{ ORG }}-{{ REPO }}.{{ RUNNER_NAME }}.service
        state: started
      tags:
        - start

    - name: Stopping the runner service
      become: yes
      systemd:
        name: actions.runner.{{ ORG }}-{{ REPO }}.{{ RUNNER_NAME }}.service
        state: stopped
      tags:
        - never
        - stop

    - name: Disable starting the runner service when the system boots
      become: yes
      systemd:
        name: actions.runner.{{ ORG }}-{{ REPO }}.{{ RUNNER_NAME }}.service
        enabled: no
      tags:
        - never
        - disable

    - name: Restart the runner service
      become: yes
      systemd:
        name: actions.runner.{{ ORG }}-{{ REPO }}.{{ RUNNER_NAME }}.service
        state: restarted
      tags:
        - never
        - restart

    - name: Unregister the runner with GitHub
      args:
        chdir: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}
      become: yes
      command: ./svc.sh uninstall
      tags:
        - never
        - uninstall

    - name: Uninstall the runner service
      args:
        chdir: /home/tester/opt/actions-runner/{{ ORG }}/{{ REPO }}/{{ RUNNER_NAME }}
      command: ./config.sh remove --token {{ CURL_OUTPUT.stdout }}
      tags:
        - never
        - uninstall
